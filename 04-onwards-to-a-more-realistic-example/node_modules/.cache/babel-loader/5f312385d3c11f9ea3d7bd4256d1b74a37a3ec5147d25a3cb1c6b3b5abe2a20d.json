{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    const body = requestConfig.body === undefined ? {} : {\n      method: requestConfig.method ? requestConfig.method : 'GET',\n      headers: requestConfig.headers ? requestConfig.headers : {},\n      body: JSON.stringify(requestConfig.body)\n    };\n    try {\n      const response = await fetch(requestConfig.url, body);\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequest: sendRequest\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","body","undefined","method","headers","JSON","stringify","response","fetch","url","ok","Error","data","json","err","message"],"sources":["C:/Workspace/React/04-onwards-to-a-more-realistic-example/src/hooks/useHttp.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async (requestConfig, applyData) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        const body = requestConfig.body === undefined\r\n        ? {}\r\n        : {\r\n            method: requestConfig.method ? requestConfig.method : 'GET',\r\n            headers: requestConfig.headers ? requestConfig.headers : {},\r\n            body: JSON.stringify(requestConfig.body)\r\n        }\r\n\r\n        try {\r\n          const response = await fetch(\r\n            requestConfig.url, body\r\n          );\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Request failed!');\r\n          }\r\n    \r\n          const data = await response.json();\r\n    \r\n          applyData(data)\r\n        } catch (err) {\r\n          setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n      };\r\n    \r\n    return {\r\n      isLoading: isLoading,\r\n      error: error,\r\n      sendRequest: sendRequest\r\n    } \r\n}\r\n\r\nexport default useHttp"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,WAAW,GAAG,MAAAA,CAAOC,aAAa,EAAEC,SAAS,KAAK;IACpDL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMI,IAAI,GAAGF,aAAa,CAACE,IAAI,KAAKC,SAAS,GAC3C,CAAC,CAAC,GACF;MACEC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;MAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;MAC3DH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAACP,aAAa,CAACE,IAAI;IAC3C,CAAC;IAED,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1BT,aAAa,CAACU,GAAG,EAAER,IACrB,CAAC;MAED,IAAI,CAACM,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAElCb,SAAS,CAACY,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZjB,QAAQ,CAACiB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACApB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEH,OAAO;IACLD,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,WAAW,EAAEA;EACf,CAAC;AACL,CAAC;AAAAL,EAAA,CAtCKD,OAAO;AAwCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}