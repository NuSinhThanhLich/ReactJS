{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchTasks = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://tasks-react-2d5e2-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json');\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n      const data = await response.json();\n      const loadedTasks = [];\n      for (const taskKey in data) {\n        loadedTasks.push({\n          id: taskKey,\n          text: data[taskKey].text\n        });\n      }\n      setTasks(loadedTasks);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n};\n_s(useHttp, \"e4kBt7QYx/QZ/pIdB4oHDuoMTZc=\");\nexport default useHttp;","map":{"version":3,"names":["useEffect","useState","useHttp","_s","isLoading","setIsLoading","error","setError","fetchTasks","taskText","response","fetch","ok","Error","data","json","loadedTasks","taskKey","push","id","text","setTasks","err","message"],"sources":["C:/Workspace/React/04-onwards-to-a-more-realistic-example/src/hooks/useHttp.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useHttp = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchTasks = async (taskText) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n          const response = await fetch(\r\n            'https://tasks-react-2d5e2-default-rtdb.asia-southeast1.firebasedatabase.app/tasks.json'\r\n          );\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Request failed!');\r\n          }\r\n    \r\n          const data = await response.json();\r\n    \r\n          const loadedTasks = [];\r\n    \r\n          for (const taskKey in data) {\r\n            loadedTasks.push({ id: taskKey, text: data[taskKey].text });\r\n          }\r\n    \r\n          setTasks(loadedTasks);\r\n        } catch (err) {\r\n          setError(err.message || 'Something went wrong!');\r\n        }\r\n        setIsLoading(false);\r\n      };\r\n    \r\n      useEffect(() => {\r\n        fetchTasks();\r\n      }, []);\r\n      \r\n}\r\n\r\nexport default useHttp"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACnCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wFACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAG,EAAE;MAEtB,KAAK,MAAMC,OAAO,IAAIH,IAAI,EAAE;QAC1BE,WAAW,CAACE,IAAI,CAAC;UAAEC,EAAE,EAAEF,OAAO;UAAEG,IAAI,EAAEN,IAAI,CAACG,OAAO,CAAC,CAACG;QAAK,CAAC,CAAC;MAC7D;MAEAC,QAAQ,CAACL,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDL,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;AAEZ,CAAC;AAAAL,EAAA,CAnCKD,OAAO;AAqCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}