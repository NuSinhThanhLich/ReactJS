{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return ({isError: true, message: 'Could not fetch events'})\n    // throw new Response(JSON.stringify({message: 'Could not fetch events'}), {status: 500})\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json9;\n  }\n}\nexport async function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\n// client code not a react component\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","loadEvents","_c","response","fetch","ok","message","status","resData","json9","loader","$RefreshReg$"],"sources":["C:/Workspace/React/12-adv-starting-project/frontend/src/pages/EventsPage.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\nimport EventsList from \"../components/EventsList\";\r\nimport { Suspense } from \"react\";\r\n\r\nfunction EventsPage() {\r\n  const {events} = useLoaderData();\r\n\r\n  return (\r\n  <Suspense fallback={<p style={{textAlign: \"center\"}}>Loading...</p>}>\r\n  <Await resolve={events}>\r\n    {(loadedEvents) => <EventsList events={loadEvents} /> }\r\n  </Await>\r\n  </Suspense>\r\n  )\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents () {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return ({isError: true, message: 'Could not fetch events'})\r\n    // throw new Response(JSON.stringify({message: 'Could not fetch events'}), {status: 500})\r\n    throw json ({message: 'Could not fetch events'}, {status: 500})\r\n  } else {\r\n    const resData = await response.json9\r\n    \r\n  }\r\n}\r\n\r\nexport async function loader() {\r\n defer({\r\n  events: loadEvents()\r\n })\r\n}\r\n// client code not a react component\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGV,aAAa,CAAC,CAAC;EAEhC,oBACAO,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACpEP,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAKb,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEW;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb;AAACT,EAAA,CAVQD,UAAU;EAAA,QACAR,aAAa;AAAA;AAAAsB,EAAA,GADvBd,UAAU;AAYnB,eAAeA,UAAU;AAEzB,eAAea,UAAUA,CAAA,EAAI;EAC3B,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,MAAMxB,IAAI,CAAE;MAACyB,OAAO,EAAE;IAAwB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACjE,CAAC,MAAM;IACL,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACM,KAAK;EAEtC;AACF;AAEA,OAAO,eAAeC,MAAMA,CAAA,EAAG;EAC9B5B,KAAK,CAAC;IACLQ,MAAM,EAAEW,UAAU,CAAC;EACpB,CAAC,CAAC;AACH;AACA;AAAA,IAAAC,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}