{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport Root from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, { loader as eventsLoader } from \"./pages/EventsPage\";\nimport EventDetailPage, { loader as eventsDetailLoader } from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventRoot from \"./pages/EventRoot\";\nimport ErrorPage from \"./pages/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst route = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventRoot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventsID',\n      children: [{\n        path: '',\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this)\n      }, {\n        path: 'new',\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }, this)\n      }]\n    }, {\n      path: ':eventsID/edit',\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 43\n      }, this)\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: route\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","Root","HomePage","EventsPage","loader","eventsLoader","EventDetailPage","eventsDetailLoader","NewEventPage","EditEventPage","EventRoot","ErrorPage","jsxDEV","_jsxDEV","route","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","App","router","_c","$RefreshReg$"],"sources":["C:/Workspace/React/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\"\nimport Root from \"./pages/Root\";\nimport HomePage from \"./pages/HomePage\";\nimport EventsPage, {loader as eventsLoader} from \"./pages/EventsPage\";\nimport EventDetailPage, {loader as eventsDetailLoader} from \"./pages/EventDetailPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventRoot from \"./pages/EventRoot\";\nimport ErrorPage from \"./pages/Error\";\n\n\nconst route = createBrowserRouter([\n  {\n    path: '/',\n    element: <Root/>,\n    errorElement: <ErrorPage/>,\n    children: [\n      {index: true, element: <HomePage/>},\n      {path: 'events', element: <EventRoot/>, children: [\n        {\n          index: true, element: <EventsPage/>, \n          loader: eventsLoader\n        },\n\n        {\n          path: ':eventsID',\n          children: [\n           {\n            path: '', element: <EventDetailPage/>\n           },\n           {\n            path: 'new', element: <NewEventPage/>\n           }\n          ]\n        },\n        {path: ':eventsID/edit', element: <EditEventPage/>}\n      ]}\n    ]\n  }\n])\n\nfunction App() {\n  return (\n    <RouterProvider router={route} />\n  )\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,IAAGC,MAAM,IAAIC,YAAY,QAAO,oBAAoB;AACrE,OAAOC,eAAe,IAAGF,MAAM,IAAIG,kBAAkB,QAAO,yBAAyB;AACrF,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,KAAK,GAAGf,mBAAmB,CAAC,CAChC;EACEgB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACZ,IAAI;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAChBC,YAAY,eAAER,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EAC1BE,QAAQ,EAAE,CACR;IAACC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACX,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACnC;IAACL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACH,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;IAAEE,QAAQ,EAAE,CAChD;MACEC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEH,OAAA,CAACV,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MACnChB,MAAM,EAAEC;IACV,CAAC,EAED;MACEU,IAAI,EAAE,WAAW;MACjBO,QAAQ,EAAE,CACT;QACCP,IAAI,EAAE,EAAE;QAAEC,OAAO,eAAEH,OAAA,CAACP,eAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MACrC,CAAC,EACD;QACCL,IAAI,EAAE,KAAK;QAAEC,OAAO,eAAEH,OAAA,CAACL,YAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MACrC,CAAC;IAEJ,CAAC,EACD;MAACL,IAAI,EAAE,gBAAgB;MAAEC,OAAO,eAAEH,OAAA,CAACJ,aAAa;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,CAAC;EACpD,CAAC;AAEN,CAAC,CACF,CAAC;AAEF,SAASI,GAAGA,CAAA,EAAG;EACb,oBACEX,OAAA,CAACb,cAAc;IAACyB,MAAM,EAAEX;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErC;AAACM,EAAA,GAJQF,GAAG;AAMZ,eAAeA,GAAG;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}