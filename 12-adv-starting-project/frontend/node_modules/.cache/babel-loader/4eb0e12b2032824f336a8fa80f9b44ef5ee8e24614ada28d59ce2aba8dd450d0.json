{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventsID;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected events.'\n    }, {\n      status: 500\n    });\n  }\n  return response;\n}\nexport async function action({\n  params\n}) {\n  const id = params.eventsID;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected events.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventsID","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["C:/Workspace/React/12-adv-starting-project/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\"\r\nimport EventItem from '../components/EventItem'\r\n\r\nconst EventDetailPage = () => {\r\n    const data = useRouteLoaderData('event-detail')\r\n    return (\r\n        <>\r\n           <EventItem event={data.event}/>\r\n        </>\r\n    )\r\n}\r\nexport default EventDetailPage\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventsID\r\n    const response = await fetch (\"http://localhost:8080/events/\" + id)\r\n    if (!response.ok) {\r\n        throw json({message: 'Could not fetch details for selected events.'}, \r\n        {status: 500})\r\n    }\r\n    return response\r\n}\r\n\r\nexport async function action({params}) {\r\n    const id = params.eventsID\r\n    const response = await fetch (\"http://localhost:8080/events/\" + id)\r\n    if (!response.ok) {\r\n        throw json({message: 'Could not fetch details for selected events.'}, \r\n        {status: 500})\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACGN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAChC,CAAC;AAEX,CAAC;AAAAP,EAAA,CAPKD,eAAe;EAAA,QACJN,kBAAkB;AAAA;AAAAe,EAAA,GAD7BT,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA+B,GAAGH,EAAE,CAAC;EACnE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAA8C,CAAC,EACpE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAClB;EACA,OAAOJ,QAAQ;AACnB;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAACR;AAAM,CAAC,EAAE;EACnC,MAAMC,EAAE,GAAGD,MAAM,CAACE,QAAQ;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA+B,GAAGH,EAAE,CAAC;EACnE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMxB,IAAI,CAAC;MAACyB,OAAO,EAAE;IAA8C,CAAC,EACpE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAClB;AACJ;AAAC,IAAAV,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}