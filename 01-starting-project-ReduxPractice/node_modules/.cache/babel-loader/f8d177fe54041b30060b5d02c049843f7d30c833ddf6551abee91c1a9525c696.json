{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://redux-project-bf2af-default-rtdb.asia-southeast1.firebasedatabase.app/Cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      await fetchData();\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartDT = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = fetch('https://redux-project-bf2af-default-rtdb.asia-southeast1.firebasedatabase.app/Cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error...',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","error","showNotification","status","title","message","sendCartDT","cart","sendRequest","method","body","JSON","stringify"],"sources":["C:/Workspace/React/01-starting-project-ReduxPractice/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\n\r\nexport const fetchCartData = () => {\r\n   return async dispatch => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://redux-project-bf2af-default-rtdb.asia-southeast1.firebasedatabase.app/Cart.json', )\r\n            \r\n            if (!response.ok) {\r\n                throw new Error('Could not fetch cart data!')\r\n            }\r\n\r\n            const data = await response.json()\r\n            return data\r\n        }\r\n\r\n        try {\r\n           await fetchData()\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Error...',\r\n                message: 'Fetching cart data failed!'\r\n            }))\r\n        }\r\n   }\r\n}\r\n\r\nexport const sendCartDT = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n          }))\r\n\r\n        const sendRequest = async () => {\r\n            const response = fetch ('https://redux-project-bf2af-default-rtdb.asia-southeast1.firebasedatabase.app/Cart.json', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(cart)\r\n            })\r\n      \r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed')\r\n            } \r\n        }\r\n\r\n       try {\r\n        await sendRequest()\r\n        dispatch(uiActions.showNotification({\r\n            status: 'success',\r\n            title: 'Success...',\r\n            message: 'Sent cart data successfully!'\r\n          }))\r\n         \r\n       } catch (error) {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error...',\r\n            message: 'Sent cart data failed!'\r\n          }))\r\n       }\r\n\r\n        \r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAMC,QAAQ,IAAI;IACpB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAA2F,CAAC;MAEzH,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACD,MAAML,SAAS,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZR,QAAQ,CAACF,SAAS,CAACW,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACL,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAChC,OAAO,MAAOd,QAAQ,IAAK;IACvBA,QAAQ,CAACF,SAAS,CAACW,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IAEL,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMb,QAAQ,GAAGC,KAAK,CAAE,yFAAyF,EAAE;QACnHa,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MACzB,CAAC,CAAC;MAEF,IAAI,CAACZ,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC;IAEF,IAAI;MACH,MAAMU,WAAW,CAAC,CAAC;MACnBf,QAAQ,CAACF,SAAS,CAACW,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACfR,QAAQ,CAACF,SAAS,CAACW,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACN;EAGH,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}