{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\React\\\\01-project-valid-form\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => {\n    value.trim !== '';\n  });\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmitsionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClass = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitsionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"4AWPT9p4w8RUtZV1NGlVqaF3X5Q=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","formIsValid","enteredNameIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","nameInputChangeHandler","setEnteredName","nameInputBlurHandler","setEnteredNameTouched","formSubmitsionHandler","preventDefault","nameInputClass","nameInputIsInvalid","emailInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Workspace/React/01-project-valid-form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName, \n    hasError: nameInputHasError, \n    valueChangeHandler: nameChangeHandler, \n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => {value.trim !== ''})\n  \n  const [enteredEmail, setEnteredEmail] = useState('')\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@')\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\n  \n  let formIsValid = false\n  \n    if (enteredNameIsValid && enteredEmailIsValid) {\n      formIsValid = true\n    } \n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value)\n  }\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true)\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true)\n  }\n\n  const formSubmitsionHandler = event => {\n    event.preventDefault()\n    setEnteredNameTouched(true)\n    setEnteredEmailTouched(true)\n\n   if (!enteredNameIsValid || !enteredEmailIsValid) {\n    return\n   }\n    setEnteredName('')\n    setEnteredEmail('')\n    setEnteredNameTouched(false)\n    setEnteredEmailTouched(false)\n  }\n\n  const nameInputClass = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n  const emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmitsionHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} value={enteredName}/>\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='email' id='email' onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} value={enteredEmail}/>\n        {emailInputIsInvalid && <p className=\"error-text\">Email is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}