{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspace\\\\React\\\\01-project-valid-form\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => {\n    value.trim !== '';\n  });\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@');\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  };\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmitsionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClass = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitsionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"0Rnxrt+gbqPGuLH96hVfmIWcOiU=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredEmailIsValid","includes","emailInputIsInvalid","enteredNameIsValid","nameInputIsInvalid","formIsValid","emailInputChangeHandler","event","target","emailInputBlurHandler","nameInputChangeHandler","setEnteredName","nameInputBlurHandler","formSubmitsionHandler","preventDefault","nameInputClass","emailInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Workspace/React/01-project-valid-form/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n  const {value: enteredName, hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler} = useInput(value => {value.trim !== ''})\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false)\n  const [enteredEmail, setEnteredEmail] = useState('')\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.includes('@')\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\n  const enteredNameIsValid = enteredName.trim() !== ''\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched\n\n  let formIsValid = false\n  \n    if (enteredNameIsValid && enteredEmailIsValid) {\n      formIsValid = true\n    } \n\n  const emailInputChangeHandler = event => {\n    setEnteredEmail(event.target.value)\n  }\n\n  const emailInputBlurHandler = event => {\n    setEnteredEmailTouched(true)\n  }\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value)\n  }\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true)\n  }\n\n  const formSubmitsionHandler = event => {\n    event.preventDefault()\n    setEnteredNameTouched(true)\n    setEnteredEmailTouched(true)\n\n   if (!enteredNameIsValid || !enteredEmailIsValid) {\n    return\n   }\n    setEnteredName('')\n    setEnteredEmail('')\n    setEnteredNameTouched(false)\n    setEnteredEmailTouched(false)\n  }\n\n  const nameInputClass = nameInputIsInvalid ? 'form-control invalid' : 'form-control'\n  const emailInputClass = emailInputIsInvalid ? 'form-control invalid' : 'form-control'\n\n  return (\n    <form onSubmit={formSubmitsionHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangeHandler} onBlur={nameInputBlurHandler} value={enteredName}/>\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className={emailInputClass}>\n        <label htmlFor='email'>Your Email</label>\n        <input type='email' id='email' onChange={emailInputChangeHandler} onBlur={emailInputBlurHandler} value={enteredEmail}/>\n        {emailInputIsInvalid && <p className=\"error-text\">Email is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAACC,KAAK,EAAEC,WAAW;IAAEC,QAAQ,EAAEC,iBAAiB;IAAEC,kBAAkB,EAAEC,iBAAiB;IAAEC,gBAAgB,EAAEC;EAAe,CAAC,GAAGb,QAAQ,CAACM,KAAK,IAAI;IAACA,KAAK,CAACQ,IAAI,KAAK,EAAE;EAAA,CAAC,CAAC;EAC1K,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACoB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMsB,mBAAmB,GAAGJ,YAAY,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIG,YAAY,CAACK,QAAQ,CAAC,GAAG,CAAC;EACpF,MAAMC,mBAAmB,GAAG,CAACF,mBAAmB,IAAIF,mBAAmB;EACvE,MAAMK,kBAAkB,GAAGjB,WAAW,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE;EACpD,MAAMW,kBAAkB,GAAG,CAACD,kBAAkB,IAAIT,kBAAkB;EAEpE,IAAIW,WAAW,GAAG,KAAK;EAErB,IAAIF,kBAAkB,IAAIH,mBAAmB,EAAE;IAC7CK,WAAW,GAAG,IAAI;EACpB;EAEF,MAAMC,uBAAuB,GAAGC,KAAK,IAAI;IACvCV,eAAe,CAACU,KAAK,CAACC,MAAM,CAACvB,KAAK,CAAC;EACrC,CAAC;EAED,MAAMwB,qBAAqB,GAAGF,KAAK,IAAI;IACrCR,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMW,sBAAsB,GAAGH,KAAK,IAAI;IACtCI,cAAc,CAACJ,KAAK,CAACC,MAAM,CAACvB,KAAK,CAAC;EACpC,CAAC;EAED,MAAM2B,oBAAoB,GAAGL,KAAK,IAAI;IACpCZ,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMkB,qBAAqB,GAAGN,KAAK,IAAI;IACrCA,KAAK,CAACO,cAAc,CAAC,CAAC;IACtBnB,qBAAqB,CAAC,IAAI,CAAC;IAC3BI,sBAAsB,CAAC,IAAI,CAAC;IAE7B,IAAI,CAACI,kBAAkB,IAAI,CAACH,mBAAmB,EAAE;MAChD;IACD;IACCW,cAAc,CAAC,EAAE,CAAC;IAClBd,eAAe,CAAC,EAAE,CAAC;IACnBF,qBAAqB,CAAC,KAAK,CAAC;IAC5BI,sBAAsB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMgB,cAAc,GAAGX,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EACnF,MAAMY,eAAe,GAAGd,mBAAmB,GAAG,sBAAsB,GAAG,cAAc;EAErF,oBACErB,OAAA;IAAMoC,QAAQ,EAAEJ,qBAAsB;IAAAK,QAAA,gBACpCrC,OAAA;MAAKsC,SAAS,EAAEJ,cAAe;MAAAG,QAAA,gBAC7BrC,OAAA;QAAOuC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC3C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAEjB,sBAAuB;QAACkB,MAAM,EAAEhB,oBAAqB;QAAC3B,KAAK,EAAEC;MAAY;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACjHpB,kBAAkB,iBAAIvB,OAAA;QAAGsC,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACN3C,OAAA;MAAKsC,SAAS,EAAEH,eAAgB;MAAAE,QAAA,gBAC9BrC,OAAA;QAAOuC,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzC3C,OAAA;QAAO4C,IAAI,EAAC,OAAO;QAACC,EAAE,EAAC,OAAO;QAACC,QAAQ,EAAErB,uBAAwB;QAACsB,MAAM,EAAEnB,qBAAsB;QAACxB,KAAK,EAAEW;MAAa;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACtHtB,mBAAmB,iBAAIrB,OAAA;QAAGsC,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC,eACN3C,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BrC,OAAA;QAAQgD,QAAQ,EAAE,CAACxB,WAAY;QAAAa,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACxC,EAAA,CAnEIF,WAAW;EAAA,QACqHH,QAAQ;AAAA;AAAAmD,EAAA,GADxIhD,WAAW;AAqEjB,eAAeA,WAAW;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}